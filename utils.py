import tkinter as tk
import ttkbootstrap as ttk
from PIL import Image, ImageTk, ImageDraw
from ttkbootstrap import utility
import winsound
from base64 import b64decode

def break_beep():
    winsound.Beep(200, 400)
    winsound.Beep(400, 400)


def focus_beep():
    winsound.Beep(400, 400)
    winsound.Beep(200, 400)

def get_icon_img():
    icon_str = b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAA+1JREFUWEfFlm1sU2UUx//n6ToIatxoSTTGhJioESSBSNS4QXvx5RMRibZrCC+9wyyZMdJOne38QPmgGzjX8sH3rJ0zwa6QCIuRZGS0gwGJL4mYQPAlQePEBFrxbQa39h65t7t1W8tuu17xSZqb23vO//ye8zzPeQ7hfx5UTfzuY65lWUWcqRHK8hfW7j87H62qALpSTUkAzqu/VMA5IP3nAJ1JdwgKnQw+PDCkBisFsOd40/pcllcHpUSoHKCyM9CZ9DiJOAnmLwJSYvW1ALqS7s9BdB8zSUEpnjKCqARgKRGfVwWZSQ5K8b7ZGehMerxEHFNtBFnuanfs+9Y0gKkZq+JegEcDzsQaPeC/QO7jADUCfCTgTDxmFFz9XnYGNIAR1wqw+Co/Q/K0O+IDepA9I54mhTmuvivMGzukxEHTAWZlYcYsu1LuIYAeBeN0QBpYWU7wOTOQeV5epuTYLYieAvA7BJ62vR47++pRl0MIoW0uItrwkiM+uHvE8zgzH9L2B6gt6IyHVX/k0M8EYWGKCaLDN4d7v5sNVrQEP7Ruqr9xYe17AD0505hes4Wj7VNZ+AjAEwDOMPMBItqZt+WxKzyxIiQd/DXjl/cCeG66BgGHFrC19YbIuz/r/88AuNy2fZXCyiiARSVS+P2kJXvvLd0fjO8edt3PFnEYwGLdjhk/seCWDkfik0ybfDuYTwNUX0JnglisWxzpPVG0BBm/zHOtncK8a0mkTyswnSnXRoJlPcB3MGhQydLwy498qG3QtL+5n8Bb5tKyhWPa5AsZyPjldwC0GG2e6RClbDN+OQJgh5EOCN22ntiLGkDat+UeQTVfMlBr6Jg/ZrsA/uxi3V9Hlof2T3BLi/W3RZNrJsFrRWE/GCr9oVjpNg3gF3/zKwzuMHQpNsgSMMpAAwBrpf4ksEkDyPjlUwAerFSgWnsGv60DqDV+abWC8/A/qQP8jTLXfx5B5nChP3WAywDqzBUvS+1c/hT45W8IuLMsFxONiNGvZ0CtSg+ZqF2WFBE9O3UMvc8w6I2yvEw0YuQe0AAu+TbfSmQ9T8ACE/UNpOiELRxtLJTitE9+kwit1wtAEG2o74kOFgAu7Wi+22LBKWYudYOZy0WI2npi22dcRvml8IYqqOXzgiJQOqegccne6NdFANcBYpyZN9sjfYV+sWRTmvF5fcjfauYVJ8IFhrLV3vP+8PTUXbMrvujzrqwRYiczq61XteMcQ2yzh3s/nS1k2JanffI6ANuIsLUiCsIVAPuuFrghS+3Cobqut9RyXzQMAXQPtc8jFg2A0sCgVQDbCWRjsB2MMRB+nHqOCcGjF24a/1htVoyg/wEhlYO6cVARSAAAAABJRU5ErkJggg=='
    icon_img = b64decode(icon_str)
    return icon_img

def get_like_img():
    like_str = b''
    like_img = b64decode(like_str)
    return like_img

class TomatoMeter(ttk.Meter):
    def __init__(self, master, amountused_show = 0, **kwargs):
        super().__init__(master, **kwargs)
        self.amountusedvar_show = tk.IntVar(value=amountused_show)
        self._setup_widget_tomato()

    def _setup_widget(self):
        pass

    def _setup_widget_tomato(self):
        self.meterframe = ttk.Frame(
            master=self, width=self._metersize, height=self._metersize
        )
        self.indicator = ttk.Label(self.meterframe)
        self.textframe = ttk.Frame(self.meterframe)
        self.textleft = ttk.Label(
            master=self.textframe,
            text=self._textleft,
            font=self._subtextfont,
            bootstyle=(self._subtextstyle, "metersubtxt"),
            anchor=tk.S,
            padding=(0, 5),
        )
        self.textcenter = ttk.Label(
            master=self.textframe,
            textvariable=self.amountusedvar_show,
            bootstyle=(self._bootstyle, "meter"),
            font=self._textfont,
        )
        self.textright = ttk.Label(
            master=self.textframe,
            text=self._textright,
            font=self._subtextfont,
            bootstyle=(self._subtextstyle, "metersubtxt"),
            anchor=tk.S,
            padding=(0, 5),
        )
        self.subtext = ttk.Label(
            master=self.meterframe,
            text=self._subtext,
            bootstyle=(self._subtextstyle, "metersubtxt"),
            font=self._subtextfont,
        )

        self.bind("<<ThemeChanged>>", self._on_theme_change)
        self.bind("<<Configure>>", self._on_theme_change)
        self._set_interactive_bind()
        self._draw_base_image()
        self._draw_meter()

        # set widget geometery
        self.indicator.place(x=0, y=0)
        self.meterframe.pack()
        self._set_show_text()

    def _configure_get(self, cnf):
        """Override the configuration get method"""
        if cnf == "arcrange":
            return self._arcrange
        elif cnf == "arcoffset":
            return self._arcoffset
        elif cnf == "amounttotal":
            return self.amounttotalvar.get()
        elif cnf == "amountused":
            return self.amountusedvar.get()
        elif cnf == "amountused_show":
            return self.amountusedvar_show.get()
        elif cnf == "interactive":
            return self._interactive
        elif cnf == "subtextfont":
            return self._subtextfont
        elif cnf == "subtextstyle":
            return self._subtextstyle
        elif cnf == "subtext":
            return self._subtext
        elif cnf == "metersize":
            return self._metersize
        elif cnf == "bootstyle":
            return self._bootstyle
        elif cnf == "metertype":
            return self._metertype
        elif cnf == "meterthickness":
            return self._meterthickness
        elif cnf == "showtext":
            return self._showtext
        elif cnf == "stripethickness":
            return self._stripethickness
        elif cnf == "textleft":
            return self._textleft
        elif cnf == "textright":
            return self._textright
        elif cnf == "textfont":
            return self._textfont
        elif cnf == "wedgesize":
            return self._wedgesize
        elif cnf == "stepsize":
            return self._stepsize
        else:
            return super(ttk.Frame, self).configure(cnf)

    def _configure_set(self, **kwargs):
        """Override the configuration set method"""
        meter_text_changed = False

        if "arcrange" in kwargs:
            self._arcrange = kwargs.pop("arcrange")
        if "arcoffset" in kwargs:
            self._arcoffset = kwargs.pop("arcoffset")
        if "amounttotal" in kwargs:
            amounttotal = kwargs.pop("amounttotal")
            self.amounttotalvar.set(amounttotal)
        if "amountused" in kwargs:
            amountused = kwargs.pop("amountused")
            self.amountusedvar.set(amountused)
        if "amountused_show" in kwargs:
            amountused_show = kwargs.pop("amountused_show")
            self.amountusedvar_show.set(amountused_show)
        if "interactive" in kwargs:
            self._interactive = kwargs.pop("interactive")
            self._set_interactive_bind()
        if "subtextfont" in kwargs:
            self._subtextfont = kwargs.pop("subtextfont")
            self.subtext.configure(font=self._subtextfont)
            self.textleft.configure(font=self._subtextfont)
            self.textright.configure(font=self._subtextfont)
        if "subtextstyle" in kwargs:
            self._subtextstyle = kwargs.pop("subtextstyle")
            self.subtext.configure(bootstyle=[self._subtextstyle, "meter"])
        if "metersize" in kwargs:
            self._metersize = utility.scale_size(kwargs.pop("metersize"))
            self.meterframe.configure(
                height=self._metersize, width=self._metersize
            )
        if "bootstyle" in kwargs:
            self._bootstyle = kwargs.pop("bootstyle")
            self.textcenter.configure(bootstyle=[self._bootstyle, "meter"])
        if "metertype" in kwargs:
            self._metertype = kwargs.pop("metertype")
        if "meterthickness" in kwargs:
            self._meterthickness = self.scale_size(
                kwargs.pop("meterthickness")
            )
        if "stripethickness" in kwargs:
            self._stripethickness = kwargs.pop("stripethickness")
        if "subtext" in kwargs:
            self._subtext = kwargs.pop("subtext")
            self.subtext.configure(text=self._subtext)
            meter_text_changed = True
        if "textleft" in kwargs:
            self._textleft = kwargs.pop("textleft")
            self.textleft.configure(text=self._textleft)
            meter_text_changed = True
        if "textright" in kwargs:
            self._textright = kwargs.pop("textright")
            meter_text_changed = True
        if "showtext" in kwargs:
            self._showtext = kwargs.pop("showtext")
            meter_text_changed = True
        if "textfont" in kwargs:
            self._textfont = kwargs.pop("textfont")
            self.textcenter.configure(font=self._textfont)
        if "wedgesize" in kwargs:
            self._wedgesize = kwargs.pop("wedgesize")
        if "stepsize" in kwargs:
            self._stepsize = kwargs.pop("stepsize")
        if meter_text_changed:
            self._set_meter_text()

        try:
            if self._metertype:
                self._set_arc_offset_range(
                    metertype=self._metertype,
                    arcoffset=self._arcoffset,
                    arcrange=self._arcrange,
                )
        except AttributeError:
            return

        self._draw_base_image()
        self._draw_meter()

        # pass remaining configurations to `ttk.Frame.configure`
        super(ttk.Frame, self).configure(**kwargs)

    def _draw_meter(self, *_):
        """Draw a meter"""
        img = self._base_image.copy()
        draw = ImageDraw.Draw(img)
        if self._stripethickness > 0:
            self._draw_striped_meter(draw)
        else:
            self._draw_solid_meter(draw)

        self._meterimage = ImageTk.PhotoImage(
            img.resize((self._metersize, self._metersize), Image.BILINEAR)
        )
        self.indicator.configure(image=self._meterimage)